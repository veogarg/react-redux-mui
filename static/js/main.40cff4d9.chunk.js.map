{"version":3,"sources":["utils/theme.js","reducers/index.js","utils/store.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","purple","secondary","green","typography","subtitle1","fontSize","body1","fontWeight","button","fontStyle","h1","color","responsiveFontSizes","combineReducers","router","store","initialState","history","middlewares","routerMiddleware","thunk","enhancers","applyMiddleware","createStore","reducers","compose","asyncReducers","Routes","className","App","createBrowserHistory","configStore","basename","CssBaseline","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIIA,EAAQC,YAAe,CACzBC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAM,OAGhBC,WAAY,CACVC,UAAW,CACTC,SAAU,IAEZC,MAAO,CACLC,WAAY,KAEdC,OAAQ,CACNC,UAAW,UAEbC,GAAI,CACFC,MAAO,cAMEhB,EAFfA,EAAQiB,YAAoBjB,G,uBCzBbkB,cAAgB,CAC7BC,yB,QCaaC,EAZD,WAAiC,IAAhCC,EAA+B,uDAAhB,GAAIC,EAAY,uCACtCC,EAAc,CAACC,2BAAiBF,GAAUG,KAE1CC,EAAY,CAACC,IAAe,WAAf,EAAmBJ,IAEhCH,EAAQQ,YAAYC,EAAUR,EAAcS,IAAO,WAAP,EAAWJ,IAI7D,OAFAN,EAAMW,cAAgB,GAEfX,G,QCRMY,EAJA,WACb,OAAO,qBAAKC,UAAU,OAAf,oBCsBMC,EAfH,WACV,IAAMZ,EAAUa,cACVf,EAAQgB,EAAY,GAAId,GAC9B,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,eAAC,IAAD,CAAeiB,SAAS,oDAAxB,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAevC,MAAOA,EAAtB,SACE,cAAC,EAAD,YCNKwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40cff4d9.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500]\n    },\n    secondary: {\n      main: green[500]\n    }\n  },\n  typography: {\n    subtitle1: {\n      fontSize: 12\n    },\n    body1: {\n      fontWeight: 500\n    },\n    button: {\n      fontStyle: 'italic'\n    },\n    h1: {\n      color: '#d0d0d0'\n    }\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { combineReducers } from 'redux';\nimport { routerReducer as router } from 'react-router-redux';\n\nexport default combineReducers({\n  router\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from 'reducers';\nimport { routerMiddleware } from 'react-router-redux';\nimport thunk from 'redux-thunk';\n\nconst store = (initialState = {}, history) => {\n  const middlewares = [routerMiddleware(history), thunk];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const store = createStore(reducers, initialState, compose(...enhancers));\n\n  store.asyncReducers = {};\n\n  return store;\n};\n\nexport default store;\n","import React from 'react';\n\nconst Routes = () => {\n  return <div className=\"test\">Hello</div>;\n};\n\nexport default Routes;\n","import { Typography } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport theme from 'utils/theme';\nimport { createBrowserHistory } from 'history';\nimport configStore from 'utils/store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Routes from 'routes';\n\nconst App = () => {\n  const history = createBrowserHistory();\n  const store = configStore({}, history);\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"/carolina-react-admin-dashboard-material-ui-free/\">\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <Routes />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}